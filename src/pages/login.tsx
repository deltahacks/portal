import type { GetServerSidePropsContext, NextPage } from "next";
import Link from "next/link";
import Head from "next/head";
import Image from "next/image";
import { useState, useEffect } from "react";
import logo from "../../public/images/logo.png";
import { signIn } from "next-auth/react";
import { getServerAuthSession } from "../server/common/get-server-auth-session";

export const DHBranding = () => {
    return (
        <div className="text-white">
            <h1 className="font-montserrat text-4xl font-bold md:text-6xl">
                Delta<span className="font-normal">Hacks</span> IX
            </h1>
            <h2 className="font-montserrat text-sm md:text-xl">
                January 13-15 | McMaster University
            </h2>
        </div>
    );
};

const Login: NextPage = () => {
    const [dark, setDark] = useState<boolean>();

    useEffect(() => {
        const currentTheme = window.matchMedia(
            "(prefers-color-scheme: dark)"
        ).matches;
        setDark(currentTheme);
        window
            .matchMedia("(prefers-color-scheme: dark)")
            .addEventListener("change", (event) => {
                const colorScheme = event.matches ? true : false;
                setDark(colorScheme);
            });
    }, []);

    return (
        <>
            <Head>
                <title>DH9 Login Page</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {/* dark / light mode*/}
            <div
                className={`flex bg-[#1f1f1f] ${dark && "dark"} h-full w-full`}
                data-theme={dark ? "dark" : "light"}
            >
                <div className="relative h-full w-full overflow-hidden bg-[#171717] md:w-1/2">
                    <div
                        className="absolute inset-0 -top-[50%] -left-[50%] h-[200%] w-[200%] -rotate-12 animate-slow-bg"
                        style={{
                            maskImage: "url(images/bg.png)",
                            WebkitMaskImage: "url(images/bg.png)",
                            background:
                                "linear-gradient(#1C1C1C 0%, #1C1C1C 40%, #2e2e2e 50%, #1C1C1C 60%, #1C1C1C 100%)",
                            backgroundSize: "200% 200%",
                        }}
                    ></div>
                    <div className="absolute bottom-0 z-10 p-3 md:relative md:top-1/2 md:left-1/2 md:w-fit md:-translate-x-1/2 md:-translate-y-1/2">
                        <div className="flex items-center gap-4">
                            <div className="hidden aspect-square w-20 md:block md:w-40">
                                <Image
                                    src={logo}
                                    alt="DeltaHacks logo"
                                    layout="responsive"
                                ></Image>
                            </div>
                            <DHBranding />
                        </div>
                    </div>
                </div>
                <div className="absolute top-1/2 left-1/2 min-w-[85%] -translate-x-1/2 -translate-y-1/2 md:left-3/4 md:min-w-[40vw] md:px-32 ">
                    <h2 className="mb-4 text-2xl font-bold text-black dark:text-white">
                        Login
                    </h2>
                    <div className="flex flex-col gap-1 rounded-md border border-zinc-600 bg-zinc-800 p-2 text-white">
                        <button
                            className="rounded-md bg-violet-700 py-6 text-center "
                            onClick={() => signIn("google")}
                        >
                            Google
                        </button>
                        <div className="text-center text-xs text-stone-500">
                            Or Continue With
                        </div>
                        <button
                            className="rounded-md border-2 border-zinc-700 py-2 text-center"
                            onClick={() => signIn("github")}
                        >
                            GitHub
                        </button>
                        <div className="rounded-md border-2 border-zinc-700 py-2 text-center">
                            Outlook
                        </div>
                        <button
                            className="rounded-md border-2 border-zinc-700 py-2 text-center"
                            onClick={() => signIn("discord")}
                        >
                            Discord
                        </button>
                        {/* <button
                            className="rounded-md border-2 border-zinc-700 py-2 text-center"
                            onClick={() => signIn("linkedin")}
                            disabled
                        >
                            LinkedIn (Wait for next-auth updated)
                        </button> */}
                    </div>
                    {/* <form className="w-full form-control md:pt-2 gap-3">
            <label className="label">
              <span className="label-text">Email</span>
            </label>
            <input
              type="email"
              placeholder="Email"
              className="w-full input input-bordered dark:bg-zinc-800"
            />
            <label className="label">
              <span className="label-text-alt">Password</span>
            </label>
            <input
              type="password"
              placeholder="Password"
              className="w-full input input-bordered dark:bg-zinc-800"
            />
            <button className="w-full mt-6 normal-case btn btn-primary">
              Login
            </button>
          </form> */}
                </div>
            </div>
            {/* the background */}

            {/* <div
        className={`flex min-h-screen ${dark && "dark"}`}
        data-theme={dark ? "dark" : "light"}
      >
        <div className="bg-[#171717] flex-1 relative overflow-hidden">
          <div
            className="absolute inset-0 -rotate-12 w-[200%] h-[200%] -top-[50%] -left-[50%] animate-slow-bg"
            style={{
              maskImage: "url(images/bg.png)",
              WebkitMaskImage: "url(images/bg.png)",
              background:
                "linear-gradient(#1C1C1C 0%, #1C1C1C 40%, #2e2e2e 50%, #1C1C1C 60%, #1C1C1C 100%)",
              backgroundSize: "200% 200%",
            }}
          ></div>
          <div className="relative z-10">
            <Image
                            draggable="false"
                            src="/images/leftp.png"
                            alt="deltahacks 9 logo"
                            width={700}
                            height={200}
                        />
            <DHBranding />
          </div>
        </div>
        <div className="relative bg-white dark:bg-[#1F1F1F] flex-1">
          <div className="relative flex justify-between w-full p-4 pl-8">
            <button
              type="button"
              onClick={() => (dark ? setDark(false) : setDark(true))}
            >
              <Image
                src={dark ? "/images/bxs_moon.svg" : "/images/bxs_sun.svg"}
                alt=""
                width={24}
                height={24}
              />
            </button>
            <nav className="flex items-center justify-end gap-8">
              <a
                href="https://deltahacks.com"
                className="text-black dark:text-white"
              >
                Home{" "}
              </a>
              <Link href={"/SignUp"}>
                <button className="normal-case btn btn-primary bg-indigo-600 hover:bg-indigo-700 rounded-lg text-white text-sm py-3 px-4">
                  Sign Up
                </button>
              </Link>
            </nav>
          </div>
          <div className="absolute w-full px-8 -translate-x-1/2 -translate-y-1/2 lg:w-72 lg:p-0 md:px-20 left-1/2 top-1/2 ">
            <h2 className="mb-4 text-2xl font-inter font-bold text-black dark:text-white">
              Log In
            </h2>
            <form className="w-full form-control">
              <label className="label">
                <span className="label-text text-sm text-black dark:text-white">
                  Email
                </span>
              </label>
              <input
                type="email"
                placeholder="Email"
                className="w-full input input-bordered dark:bg-zinc-800 p-4 my-2 rounded-lg text-black dark:text-white text-xs"
              />
              <label className="label">
                <span className="label-text-alt text-sm text-black dark:text-white">
                  Password
                </span>
              </label>
              <input
                type="password"
                placeholder="Password"
                className="w-full input input-bordered dark:bg-zinc-800 p-4 mt-2 rounded-lg text-black dark:text-white text-xs"
              />
              <button className="w-full mt-6 py-4 normal-case btn btn-primary bg-indigo-600 hover:bg-indigo-700 rounded-lg text-white text-sm">
                Log In
              </button>
              <div className="font-inter text-sm font-normal mt-2 text-black dark:text-white">
                New?{" "}
                <Link href={"/SignUp"}>
                  <a href="">
                    <strong className="text-indigo-600 underline">
                      Sign Up
                    </strong>
                  </a>
                </Link>{" "}
                here
              </div>
              <div className="font-inter text-xs font-normal mt-2 text-black dark:text-white">
                <Link href={"/ForgotPassword"}>Forgot Password?</Link>
              </div>
            </form>
          </div>
        </div>
      </div> */}
        </>
    );
};

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
    const session = await getServerAuthSession(ctx);
    if (session?.user) {
        return { redirect: { destination: "/", permanent: false } };
    }
    return { props: {} };
};

export default Login;
